{"version":3,"sources":["component/logic.js","component/ConnectFour.js","App.js","reportWebVitals.js","index.js"],"names":["aiMove","g","a","Promise","resolve","reject","isGameOver","best","moves","generateMoves","maxValue","Infinity","m","makeMove","v","negaMax","revertMove","col","grid","player","depth","alpha","beta","checkFields","b","c","d","count","i","j","length","countThree","evaluate","maxVal","move","val","move_table","row","push","sort","console","error","draw","winner","Cell","props","classname","value","className","Board","map","id","onClick","ConnectFour","useState","createGrid","setGrid","pNext","setNext","gameState","setGame","gameActive","setActive","p","gameOver","log","gridCopy","slice","nGrid","r","setTimeout","then","result","e","preventDefault","Math","random","handleClick","type","x","Array","fill","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37aab241.chunk.js","sourcesContent":["const MAXDEPTH = 8;\nexport async function aiMove(g) {\n    return new Promise(function(resolve, reject) {\n        if (isGameOver(g) !== 0) return 0;\n        let moves = generateMoves(g);\n        let maxValue = -Infinity;\n        let best;\n        for(let m of moves) {\n            makeMove(g, m, -1);\n            let v = -negaMax(g, 1, MAXDEPTH, -Infinity, Infinity);\n            if (v > maxValue) {\n                best = m;\n                maxValue = v;\n            }\n            revertMove(g, m, -1);\n        }\n        resolve(best.col);\n    });\n}\n\n// alpha-beta-pruning with negaMax\nfunction negaMax(grid, player, depth, alpha, beta) {\n    if (depth === 0 || isGameOver(grid))\n        return evaluate(grid, player, depth);\n    let maxVal = alpha;\n    let moves = generateMoves(grid);\n\n    for (let move of moves) {\n        makeMove(grid, move, player);\n        let val = -negaMax(grid, -player, depth - 1, -beta, -maxVal);\n        \n        revertMove(grid, move, player);\n        if (val > maxVal) {\n            maxVal = val;\n            if (maxVal >= beta)\n                break;\n        }\n    }\n    return maxVal;\n}\n\n\n\nfunction evaluate(grid, player, depth) {\n    if (isGameOver(grid) === player) return depth*1000;\n    else if (isGameOver(grid) === -player) return -1000*depth;\n\n    return countThree(grid, player);\n}\n\n// returns occurrences of three cells and an empty cell in a row owned by player\nfunction countThree(grid, player) {\n    function checkFields(a, b, c, d) {\n        if ((player === a && a === b && b === c && d === null) ||\n            (player === a && a === b && c === null && b === d) ||\n            (player === a && b === null && a === c && c === d) ||\n            (null === a && a === b && b === c && d === player)) return true\n        else return false;\n    }\n\n    let count = 0;\n\n    // 0 = game running, 1 = p1 won, -1 = p2 won\n    // check rows\n    for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < grid.length; j++) {\n            if (checkFields(grid[i][j], grid[i + 1][j], grid[i + 2][j], grid[i + 3][j])) count++;\n        }\n    }\n\n    // check columns\n    for (let i = 0; i < grid[0].length; i++) {\n        for (let j = 0; j < 3; j++) {\n            if (checkFields(grid[i][j], grid[i][j + 1], grid[i][j + 2], grid[i][j + 3])) count++;\n        }\n    }\n\n    // left top -> left bottom\n    for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 3; j++) {\n            if (checkFields(grid[i][j], grid[i + 1][j + 1], grid[i + 2][j + 2], grid[i + 3][j + 3])) count++;\n        }\n    }\n\n    // left top -> left bottom\n    for (let i = 3; i < 6; i++) {\n        for (let j = 0; j < 3; j++) {\n            if (checkFields(grid[i][j], grid[i - 1][j + 1], grid[i - 2][j + 2], grid[i - 3][j + 3])) count++;\n        }\n    }\n\n    return count;\n}\n\nconst move_table = \n    [3,4, 5, 7, 5,4,3,\n     4,6, 8,10, 8,6,4,\n     5,8,11,13,11,8,5,\n     5,8,11,13,11,8,5,\n     4,6, 8,10, 8,6,4,\n     3,4, 5, 7, 5,4,3,];\nfunction generateMoves(grid) {\n    let moves = [];\n    for (let col = 0; col < 7; col++) {\n        for (let row = 6 - 1; row >= 0; row--) {\n            if (!grid[col][row]) {\n                moves.push({ col, row });\n                break;\n            }\n        }\n    }\n    // sort moves by distance to the middle column\n    return moves.sort((a, b) => move_table[b.row*7 + b.col] - move_table[a.row * 7 + a.col]);\n}\n\nfunction makeMove(grid, move, player) {\n    if (grid[move.col][move.row]) console.error(\"Invalid move: \" + move.col + \" \" + move.row);\n    grid[move.col][move.row] = player;\n}\n\nfunction revertMove(grid, move, player) {\n    if (grid[move.col][move.row] !== player) console.error(\"Invalid revert: \" + move.col + \" \" + move.row);\n    grid[move.col][move.row] = null;\n}\n\nfunction isGameOver(grid) {\n    let draw = true;\n    for (let i = 0; i < 7; i++)\n        if(!grid[i][0]) draw = false;\n\n    function checkFields(a, b, c, d) {\n        if (a && a === b && b === c && c === d) return a;\n        else return null;\n    }\n\n    // check rows\n    for (let j = 0; j < 6; j++) {\n        for (let i = 0; i < 4; i++) {\n        let winner = checkFields(grid[i][j], grid[i+1][j], grid[i+2][j], grid[i+3][j]);\n        if(winner) return winner;\n        }\n    }\n\n    //check columns\n    for (let i = 0; i < 7; i++) {\n        for (let j = 0; j < 3; j++) {\n        let winner = checkFields(grid[i][j], grid[i][j+1], grid[i][j+2], grid[i][j+3]);\n        if (winner) return winner;\n        }\n    }\n\n    //diagonals top left to bottom right\n    for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 3; j++) {\n        let winner = checkFields(grid[i][j], grid[i+1][j+1], grid[i+2][j+2], grid[i+3][j+3]);\n        if (winner) return winner;\n        }\n    }\n\n    //diagonals top right to bottom\n    for (let i = 3; i < 7; i++) {\n        for (let j = 0; j < 3; j++) {\n        let winner = checkFields(grid[i][j], grid[i-1][j+1], grid[i-2][j+2], grid[i-3][j+3]);\n        if (winner) return winner; \n        }\n    }\n    return draw ? 2 : 0;\n}","import '../style/connectFour.css';\r\nimport { useState } from 'react';\r\nimport { aiMove } from './logic';\r\n\r\n// npm run deploy\r\n// npm start\r\n\r\nfunction Cell(props) {\r\n  let classname;\r\n  if (props.value === 1) classname = 'p1';\r\n  else if (props.value === -1) classname = 'p2';\r\n\r\n  return (\r\n      <div>\r\n        <div className={'cell'}><div className={classname}></div>\r\n      </div></div>\r\n        \r\n  )\r\n}\r\n\r\nfunction Board(props) {\r\n  return (\r\n      <div className={\"board\"}>\r\n          {props.grid.map((col, i) => \r\n              <div className={\"column-box\"} key ={\"col\" + i}>\r\n                <div key={i} id={`col-${i}`} className={\"col\"} >\r\n                    {col.map((value, j) => <Cell key={j} value={value}/>)}\r\n                </div>\r\n                <div key={i+\"rand\"} className={\"col-border\"} \r\n                  onClick={() => props.onClick(i)}\r\n                >\r\n                  {col.map((value, j) => <div key={j} className={\"cell-border\"}/>)}\r\n\r\n                </div>\r\n              </div>\r\n          )}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function ConnectFour(props) {\r\n    const [grid, setGrid] = useState( createGrid() );\r\n    const [pNext, setNext] = useState( true );\r\n    const [gameState, setGame] = useState(0);\r\n    const [gameActive, setActive] = useState(false);\r\n\r\n    function makeMove(i, g, p) {\r\n      if (g[i][0] || gameOver(g)) {\r\n        console.log(\"col full\");\r\n        \r\n        return null;\r\n      }\r\n      let gridCopy = [];\r\n      for (let j = 0; j < g.length; j++)\r\n        gridCopy[j] = g[j].slice();\r\n\r\n\r\n      let row = 6;\r\n      for( let j = 0; j < 6; j++) {\r\n        if(gridCopy[i][j]) {\r\n          row = j;\r\n          break;\r\n        }\r\n      }\r\n      gridCopy[i][row-1] = p ? 1 : -1;\r\n      \r\n      setGame(gameOver(gridCopy));\r\n      setGrid(gridCopy)\r\n      return gridCopy;\r\n    }\r\n\r\n    async function handleClick(i) {\r\n      if( gameActive && gameState === 0 && pNext) {\r\n        setNext(false);\r\n        let nGrid = makeMove(i, grid, true);\r\n        if (!nGrid) {\r\n          setNext(true);\r\n          return;\r\n        }\r\n        //let gridCopy = [];\r\n        //for (let j = 0; j < nGrid.length; j++)\r\n        //  gridCopy[j] = nGrid[j].slice();\r\n        await new Promise(r => setTimeout(r, 550));\r\n        aiMove(nGrid).then(\r\n            result => {\r\n              makeMove(result, nGrid, false);\r\n              setNext(true);\r\n            }\r\n        )\r\n\r\n      }\r\n    }\r\n    \r\n    function handleResetClick(e) {\r\n      \r\n      e.preventDefault();\r\n      if (gameActive) {   \r\n        setGrid(createGrid());\r\n        setGame(0);\r\n        setActive(false);\r\n      }\r\n      else {\r\n        setActive(true);\r\n        if (Math.random() < 0.5) {\r\n          setNext(true);\r\n        }\r\n        else {\r\n          setNext(false);\r\n          aiMove(createGrid()).then(\r\n            result => {\r\n              makeMove(result, createGrid(), false);\r\n              setNext(true);\r\n            });\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={\"background\"}>\r\n        <div className={\"connect-four\"}>\r\n          <div className={\"header\"}>\r\n            <h1>CONNECT FOUR AI</h1>\r\n            <h2>made by jannis becketepe and timon kobusch.</h2>\r\n          </div>\r\n          <div className={\"menu\"}>\r\n            <button className=\"game-button\" onClick={handleResetClick}>{gameActive ? 'reset' : 'start game'}</button>\r\n            {gameActive && gameState===0 && !pNext && <div className=\"load\"></div>}\r\n            <p>{gameActive && gameState === 0 ? pNext ? 'your turn. click a column.' : 'the computer is thinking.' : ''}</p>\r\n            <p>{gameState === 1 ? 'you won!' : gameState === -1 ? 'the computer won.' : ''}</p>\r\n          </div>\r\n          <Board \r\n              grid={grid}\r\n              onClick={i => handleClick(i)}\r\n          />\r\n          <div className={\"log-switch\"}>\r\n            <label className={\"switch\"}>\r\n              <input type=\"checkbox\"/>\r\n              <span className={\"slider round\"}></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nfunction createGrid() {\r\n    let x = new Array(7);\r\n    for(let i = 0; i < x.length; i++) {\r\n      x[i] = new Array(6).fill(null);\r\n    }\r\n    return x;\r\n}\r\n\r\nfunction checkFields(a, b, c, d) {\r\n  if (a && a === b && b === c && c === d) {\r\n    return a;\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction gameOver(grid) {\r\n  // check rows\r\n  for (let j = 0; j < 6; j++) {\r\n    for (let i = 0; i < 4; i++) {\r\n      let winner = checkFields(grid[i][j], grid[i+1][j], grid[i+2][j], grid[i+3][j]);\r\n      if(winner) return winner;\r\n    }\r\n  }\r\n\r\n  //check columns\r\n  for (let i = 0; i < 7; i++) {\r\n    for (let j = 0; j < 3; j++) {\r\n      let winner = checkFields(grid[i][j], grid[i][j+1], grid[i][j+2], grid[i][j+3]);\r\n      if (winner) return winner;\r\n    }\r\n  }\r\n\r\n  //diagonals top left to bottom right\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 3; j++) {\r\n      let winner = checkFields(grid[i][j], grid[i+1][j+1], grid[i+2][j+2], grid[i+3][j+3]);\r\n      if (winner) return winner;\r\n    }\r\n  }\r\n\r\n  //diagonals top right to bottom\r\n  for (let i = 3; i < 7; i++) {\r\n    for (let j = 0; j < 3; j++) {\r\n      let winner = checkFields(grid[i][j], grid[i-1][j+1], grid[i-2][j+2], grid[i-3][j+3]);\r\n      if (winner) return winner; \r\n    }\r\n  }\r\n  return 0;\r\n}\r\n","import './App.css';\nimport ConnectFour from './component/ConnectFour';\n\nfunction App() {\n  return (\n    <ConnectFour />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}